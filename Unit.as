package  {		public class Unit extends Element{		var walkPath:Node;		static const FRAMES_PER_FIELD:int = 30;		var frame: int;				public function Unit() {			// constructor code		}				public override function walk():void{						//trace("walk");			if (walkPath==null) return;									var perc:Number = frame/FRAMES_PER_FIELD;			var currentTile = tile.grid.getTile(walkPath.x,walkPath.y);			var nextTile:Tile = tile.grid.getTile(walkPath.preNode.x,walkPath.preNode.y);			var dx:Number = (nextTile.x - currentTile.x);			trace(currentTile.scaleX);			var dy:Number = (nextTile.y - currentTile.y);												if (frame==FRAMES_PER_FIELD/2){				tile.grid.getTile(walkPath.preNode.x,walkPath.preNode.y).setElement(this);				currentTile.popElement();			}			if (frame > FRAMES_PER_FIELD){				frame=0;				walkPath= walkPath.preNode;				if (walkPath.preNode == null) {					walkPath = walkPath.preNode;					//dispatchEvent(new PlayerEvent(PlayerEvent.REACHED,this));					return;				}			}else if (frame >= FRAMES_PER_FIELD/2){				x = -dx*(1-perc);				y = -dy*(1-perc);							}else { //erste hälfte										x = dx*perc;				y = dy*perc;							}			frame++;		}				public function gotoTarget(targetX:int,targetY:int):void {			var node:Node = Dijkstra.routeFromTo(targetX, targetY, tile.gx,tile.gy, tile.grid);			if (node== null){				trace("kein Pfad gefunden");			} else {				setWalkPath(node);			}		}				public function setWalkPath(n:Node):void{			this.walkPath = n;			frame=0;			tile.grid.getTile(walkPath.x, walkPath.y).setElement(this);		}	}	}