package  {	import flash.events.MouseEvent;		public class Controller {		var selectedElement: Element;		var targetTile: Tile;		var model:Model;		var hoverTarget:Tile;				public function Controller(m:Model) {			this.model = m;		}		public function gridClickHandler(evt:MouseEvent):void{			handleClick(this.getSelectedTile(evt));		}				public function handleClick(t:Tile):void{			var tmpElement:Element = t.getElement();						if (t.getObstacle() != null){ 			//nur obstaclefreie felder auswählen				handleObstacle(t);			}else {				var u:Unit;				if(tmpElement != null && tmpElement is Unit){		//Unitauswahl nur für eigene Units					u = tmpElement as Unit;					if (u.playerId == model.getActivePlayer().id){						selectedElement = u;					}				}				//Targetauswahl nur für  leere oder gegnerische Felder 				if(selectedElement is Unit){					u = tmpElement as Unit;					if(tmpElement == null || u.playerId != model.getActivePlayer().id){						var tsd:Unit = selectedElement as Unit;						tsd.gotoTarget(t.gx,t.gy);						selectedElement = null;						targetTile = null;					}				}			}		}				public function handleObstacle(t:Tile):void{		}				public function gridHoverHandler(evt:MouseEvent):void{			if (hoverTarget != null){				if (hoverTarget.getObstacle() != null){					hoverTarget.getObstacle().gotoAndStop(1);				}				hoverTarget.alpha = 1;			}			hoverTarget = getSelectedTile(evt);			if(hoverTarget.elementStack[0] != null) hoverTarget.alpha = 0.5;			if(selectedElement != null && hoverTarget.getObstacle() == null) hoverTarget.alpha = 0.5;			if(hoverTarget.getObstacle() != null) hoverTarget.getObstacle().play();		}				public function getSelectedTile(evt:MouseEvent):Tile{			var w:Number = model.grid.getTile(0,0).width;			var h:Number = model.grid.getTile(0,0).height;			var gx:int = (model.grid.mouseX+w/2)/w;			var gy:int = (model.grid.mouseY+h/2)/h;						return model.grid.getTile(gx,gy);		}	}	}